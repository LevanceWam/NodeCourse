This is the notes for TestingTheRentalFee
For this test we were tasked to calculate the 
rental fee we did this by calculating the amount of days times the rate 

Now there is a reicky part in ehat we are about to do
the rental Object that we are saving by default has a date out property that is set to the current time 
we need to make sure the date out has been out for 1 day not a second  so we need to modify the 
rental document in the database before calling the exec

so first lets download a package called moment js 
this package is very useful when it comes to using date and times 
npm i moment 

we are going to install this as a dependency for the project this is because we are going to also use this in the production code
to calculate the number of days the movie has been out

next we need to load it and this returns a function

back in the test 
we call moment to get the current dateTime then we use the method add
then pass -7 and second argument days
This gives us a moment object that is 7 days before 
now we have to convert this to a plain javascript object before we save the rental 
because the type of the date out property is the standard JS date 
so we call toDate and then save 

now its time to work on the assertion

so we are going to expect the fee to be 14 dollars

now in the routes we have to write the code to make the code pass
all we did here was call moment to find the difference between the days out and the day returned 
multiplied that number by the fee and we got our result 

